steps:
  - label: ":npm: Install dependencies"
    key: "deps"
    command: npm ci
    plugins:
      - artifacts#v1.9.3:
          upload: "node_modules"
          compressed: node_modules.tgz
      - docker#v5.9.0:
          image: "node:21-alpine"

  - group: "Validate"
    key: "validate"
    depends_on: "deps"
    steps:
      - label: ":buildkite: Validate pipelines"
        command: npm run validatePipeline
        plugins: &node
          - aws-assume-role-with-web-identity#v1.4.0:
              role-arn: arn:aws:iam::445615400570:role/pipeline-buildkite-templates
              session-tags:
                - organization_slug
                - organization_id
                - pipeline_slug
          - aws-ssm#v1.0.0:
              parameters:
                DATO_API_TOKEN: /pipelines/buildkite/templates/dato-api-token
          - artifacts#v1.9.3:
              download: "node_modules"
              compressed: node_modules.tgz
          - docker#v5.9.0:
              image: "node:21-alpine"
              environment:
                - DATO_API_TOKEN

      - label: ":markdown: Validate content"
        command: npm run validateContent
        plugins: *node

  - group: "Generate images"
    key: "generate_images"
    if: build.branch == "main"
    steps:
      - label: ":puppeteer: Capture screenshots"
        key: "screenshots"
        artifact_paths: "screenshots/*.png"
        command: |
          npm install
          npm run captureScreenshots
        plugins:
          - docker-compose:
              run: "puppeteer"
              mount-checkout: true

      - label: ":magic_wand: Generate images"
        depends_on: "screenshots"
        artifact_paths: "generated/*.png"
        command: .buildkite/generateImages
        plugins:
          - artifacts#v1.9.3:
              download: "screenshots/*.png"
          - docker#v5.9.0:
              image: dpokidov/imagemagick
              entrypoint: ""

  - group: "Publish"
    key: "publish"
    depends_on: ["validate", "generate_images"]
    if: build.branch == "main"
    steps:
      - label: ":datocms: Publish templates"
        command: npm run publishContent
        plugins:
          - aws-assume-role-with-web-identity#v1.4.0:
              role-arn: arn:aws:iam::445615400570:role/pipeline-buildkite-templates
              session-tags:
                - organization_slug
                - organization_id
                - pipeline_slug
          - aws-ssm#v1.0.0:
              parameters:
                DATO_API_TOKEN: /pipelines/buildkite/templates/dato-api-token
          - docker#v5.9.0:
              image: "node:21-alpine"
              environment:
                - DATO_API_TOKEN
          - artifacts#v1.9.3:
              download: "node_modules"
              compressed: node_modules.tgz
          - artifacts#v1.9.3:
              download: "generated/*.png"

      - label: ":datocms: Publish categories"
        command: npm run publishCategories
        plugins: *node

  - trigger: "marketing-website"
    depends_on: "publish"
    soft_fail: true
    if: build.branch == "main"
    label: ":buildkite: Trigger marketing site build"
    build:
      message: "Triggered by buildkite/templates"
      env:
        DOCKER_NO_CACHE: true
