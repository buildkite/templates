steps:
  - label: ":npm: Install dependencies"
    key: "deps"
    command: npm ci
    plugins:
      - artifacts#v1.9.3:
          upload: "node_modules"
          compressed: node_modules.tgz
      - docker#v5.9.0:
          image: "node:21-alpine"

  - group: "Validate"
    key: "validate"
    depends_on: "deps"
    steps:
      - label: ":buildkite: Validate pipelines"
        command: npm run validatePipeline
        plugins: &node
          - artifacts#v1.9.3:
              download: "node_modules"
              compressed: node_modules.tgz
          - docker#v5.9.0:
              image: "node:21-alpine"
              environment:
                - DATO_API_TOKEN

      - label: ":markdown: Validate content"
        command: npm run validateContent
        plugins: *node

  - label: ":puppeteer: Capture screenshots"
    key: "screenshots"
    if: build.branch == "main"
    artifact_paths: "screenshots/*.png"
    command: |
      npm install
      npm run captureScreenshots
    plugins:
      - docker-compose:
          run: "puppeteer"
          mount-checkout: true

  - group: "Publish"
    key: "publish"
    depends_on: ["validate", "screenshots"]
    if: build.branch == "main"
    steps:
      - label: ":datocms: Publish templates"
        command: npm run publishContent
        plugins:
          - docker#v5.9.0:
              image: "node:21-alpine"
              environment:
                - DATO_API_TOKEN
          - artifacts#v1.9.3:
              download: "node_modules"
              compressed: node_modules.tgz
          - artifacts#v1.9.3:
              download: "screenshots/*.png"

      - label: ":datocms: Publish categories"
        command: npm run publishCategories
        plugins: *node

  - trigger: "site"
    depends_on: "publish"
    soft_fail: true
    if: build.branch == "main"
    label: ":buildkite: Trigger site build"
    build:
      message: "Triggered by buildkite/templates"
